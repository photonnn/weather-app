This is a basic weather app. The reason for that is the limitation of the 
OpenWeatherMap API that is going to be utilised. As I'm going to be using a free
plan I won't bother with security the API key as it is publicly available. 

Outline:
1. Make the API work
2. Process the data and output it
3. Add a basic form to allow use to search a location and then output data
  below
4. Come up with a design
5. Make the website
6. Add more features as need be


Development:
1. This is quite simple. Goal is to get data from the API and output it to 
  console. Nothing fancy, just simple chain of promises.

2. Here comes the part when I have to decide what data is useful.

  Checklist:
  - Wind: km/h
  - Weather: main (clouds) + description (ex. "scattered clouds")
  - Temperature in Kelvin
  - Humidity in %
  - 'Feels like' in Kelvin
  - Pressure in mb
  - Timezone, 3600 = GMT+1
              -18000 = GMT-5

I roughly imagine design, which is mobile-first. At the top there is city name,
below time and temperature. other information is below in table like format, 
that is property (wind) on the left and value (4.2km/h) on the right.

3. I've made a seperate module and made a table for all the information that 
  we are outputting. It works perfectly well now. Input city and get weather.
  However, ... .... .... ..., I realised that OpeanWeatherAPI isn't that useless
  I can actually get the forecast data O,O. I though basic weather info was all
  that I could get o,O. Turns out I have to go back to step 2. I have to rethink
  of a way to make mobile design fit the forecast as well. Even more there are
  actually weather maps that you can use.

  For now, I think that the way to go, is to first finish this "basic" app. For
  starters that means making a button to switch from degres to fahrenheit. The 
  easier way to do it would be to simply include it next to the search button.

  It turned out that the easiest way to do change is simply by creating a new 
  button just like the back button and then remove it after finished. I will 
  likely have to include the mph instead of kph button as well. Also an actual 
  form pop-up to display or just a simple message for an error instead of alert 
  would be great.

3.1 Basic app is finished. You can display weather information about any city 
  that you'd like. The way forward now is to make use of the API to get more 
  info. I will make use of the every 3-hour forecast that shows for the next 5
  days. 

  Done with the basics. Also added the conversion to miles per hour. Did a lot 
  of refacturing the code. Most critically I decided to create buttons in html 
  not in javascript. Due to creating button in the changeBody function and 
  removing them in the resetTable function I got into the dependecy cycle when
  I tried to put listeners in a seperate function, because the listner calls 
  the changeBody to "refresh" data. It wouldn't be a problem if changeBody 
  wasn't the most foundational function as it is directly called from the
  promise.

  There is still a big problem with the design. For now I changed colors to 
  green, blue and yellow. I believe it to be more pleasing than white, grey and 
  dried red;